# ================================================================
# DEVICE CONFIGURATION TEMPLATE
# ================================================================
# This file defines the devices and connections for split inference experiments.
# Copy this file to devices_config.yaml and update with your specific settings.
#
# QUICK START:
# 1. Set up SSH keys between devices
# 2. Copy private keys to config/pkeys/ directory
# 3. Update device IP addresses and usernames below
# 4. Rename this file to devices_config.yaml
# ================================================================

# ================================================================
# DEVICE DEFINITIONS
# ================================================================
# REQUIRED CONFIGURATION:
devices:
  # --------------------------------
  # SERVER DEVICE CONFIGURATION
  # --------------------------------
  - device_type: SERVER                 # [REQUIRED] Main computing device
    connection_params:
      - host: "192.168.1.100"           # [REQUIRED] Server IP address
        user: "username"                # [REQUIRED] SSH username
        pkey_fp: "server.rsa"           # [REQUIRED] Private key in config/pkeys/
        port: 12345                     # [REQUIRED] Port for experiments
        ssh_port: 22                    # [OPTIONAL] SSH port (default: 22)
        default: true                   # [OPTIONAL] Primary connection (default: true)

  # --------------------------------
  # PARTICIPANT DEVICE CONFIGURATION
  # --------------------------------
  - device_type: PARTICIPANT            # [REQUIRED] Edge device (e.g., Jetson, RPi)
    connection_params:
      - host: "192.168.1.101"           # [REQUIRED] Participant IP address
        user: "username"                # [REQUIRED] SSH username
        pkey_fp: "participant.rsa"      # [REQUIRED] Private key in config/pkeys/
        port: 12345                     # [REQUIRED] Port for experiments
        ssh_port: 22                    # [OPTIONAL] SSH port (default: 22)
        default: true                   # [OPTIONAL] Primary connection (default: true)

# ================================================================
# EXAMPLES
# ================================================================
# EXAMPLE 1: Basic Server-Participant Setup
# -----------------------------------------
# devices:
#   - device_type: SERVER
#     connection_params:
#       - host: "192.168.1.100"
#         user: "admin"
#         pkey_fp: "server.rsa"
#         port: 12345
#         default: true
#
#   - device_type: PARTICIPANT
#     connection_params:
#       - host: "192.168.1.101"
#         user: "pi"
#         pkey_fp: "raspberry.rsa"
#         port: 12345
#         default: true
#
# EXAMPLE 2: Multiple Connection Parameters
# -----------------------------------------
# devices:
#   - device_type: SERVER
#     connection_params:
#       - host: "192.168.1.100"         # Primary connection
#         user: "admin"
#         pkey_fp: "server_primary.rsa"
#         port: 12345
#         default: true
#       - host: "10.0.0.100"            # Fallback connection
#         user: "admin"
#         pkey_fp: "server_backup.rsa"
#         port: 12345
#         default: false

# ================================================================
# SETUP INSTRUCTIONS
# ================================================================

# SSH KEY SETUP
# -------------
# 1. Generate SSH key pair on source device:
#    ssh-keygen -t rsa -b 4096 -f ~/.ssh/device_name_key
#
# 2. Copy public key to destination device:
#    ssh-copy-id -i ~/.ssh/device_name_key.pub user@device_ip
#
# 3. Place private keys in config/pkeys/ directory:
#    mkdir -p config/pkeys/
#    cp ~/.ssh/device_name_key config/pkeys/device_name.rsa
#
# 4. Set proper permissions:
#    chmod 600 config/pkeys/*.rsa
#    chmod 700 config/pkeys/
#
# 5. Test connection:
#    ssh -i ~/.ssh/device_name_key user@device_ip

# FINDING DEVICE IP ADDRESSES
# --------------------------
# Linux/WSL:  hostname -I | awk '{print $1}'
# Windows:    ipconfig
# macOS:      ifconfig | grep "inet " | grep -v 127.0.0.1

# ================================================================
# WSL-SPECIFIC SETUP
# ================================================================
# If using Windows with WSL, additional configuration is required:

# 1. Network Configuration
# -----------------------
# Edit /etc/wsl.conf:
#   [automount]
#   enabled = true
#   options = "metadata,umask=22,fmask=11"

# 2. Port Forwarding (Run in PowerShell as Administrator)
# ------------------------------------------------------
# Get WSL IP address:
#   wsl hostname -I
#
# Set up port forwarding:
#   netsh interface portproxy add v4tov4 listenaddress=0.0.0.0 listenport=22 connectaddress=<wsl_ip> connectport=22
#   netsh interface portproxy add v4tov4 listenaddress=0.0.0.0 listenport=12345 connectaddress=<wsl_ip> connectport=12345

# 3. Windows Firewall Rules
# ------------------------
#   New-NetFirewallRule -DisplayName "WSL SSH Port 22" -Direction Inbound -Action Allow -Protocol TCP -LocalPort 22
#   New-NetFirewallRule -DisplayName "WSL SSH Port 12345" -Direction Inbound -Action Allow -Protocol TCP -LocalPort 12345

# 4. Restart SSH Service in WSL
# ----------------------------
#   sudo service ssh restart

# ================================================================
# TROUBLESHOOTING
# ================================================================

# CONNECTION ISSUES
# ----------------
# 1. "Permission denied (publickey)" error:
#    - Check key permissions (should be 600)
#    - Verify the correct key is specified in config
#    - Ensure public key was correctly copied to remote device
#
# 2. "Connection refused" error:
#    - Check if SSH service is running on remote device
#    - Verify firewall allows SSH connections
#    - Confirm port forwarding is correctly set up (for WSL)
#
# 3. "Host key verification failed" error:
#    - Remove the problematic key with: ssh-keygen -R <hostname>
#    - Reconnect to add the new host key

# WSL-SPECIFIC ISSUES
# ------------------
# 1. WSL Connection Issues:
#    - Verify WSL IP address is correct: wsl hostname -I
#    - Check port forwarding rules: netsh interface portproxy show all
#    - Verify firewall rules are active: Get-NetFirewallRule | Where DisplayName -like "*WSL*"
#    - Test SSH service: sudo service ssh status

# VALIDATION CHECKLIST
# -------------------
# ✓ Private keys are in config/pkeys/ directory
# ✓ Private keys have 600 permissions
# ✓ IP addresses are correct and devices are on same network
# ✓ SSH service is running on all devices
# ✓ Ports are not blocked by firewalls
# ✓ SSH connections work manually before running experiments
