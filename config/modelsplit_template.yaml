# config/modelsplit_template.yaml

# Update this template with the appropriate configurations for your model split inference experiment

# MODEL SPLIT CONFIGURATION TEMPLATE
# ---------------------------------
# This template defines the configuration for split inference experiments.
# Rename this file to match your model (e.g., alexnetsplit.yaml, yolosplit.yaml)

# DEFAULT CONFIGURATIONS
# ---------------------
default:
  device: <device>               # Options: 'cuda' (GPU), 'cpu' (CPU). Default is cuda.
  font_path: <font_path>         # Path to font file for visualization; e.g., fonts/DejaVuSans-Bold.ttf.
  save_layer_images: <save_layer_images> # Whether to save intermediate layer images at each split. Default is false.
  collect_metrics: <collect_metrics>     # Whether to collect detailed performance metrics per split. Default is false for faster processing.

# LOGGING CONFIGURATIONS
logging:
  log_level: <log_level>         # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL. Default is INFO.
  log_file: <log_file>           # Central log file for application-wide logging. Default is logs/app.log

# MODEL CONFIGURATIONS
# -------------------
model:
  model_name: <model_name>       # REQUIRED: Model architecture name (e.g., 'alexnet', 'yolov8s')
  version: null                  # Model version if applicable. Default is null.
  pretrained: false              # Whether to use pretrained weights. Default is false.
  weight_path: null              # Path to custom weights file; e.g., 'path/to/weights/best.pt' for YOLOv8. Default is null.
  input_size: <input_size>       # REQUIRED: Input tensor dimensions [channels, height, width]. Common sizes: [3, 224, 224] for AlexNet, [3, 640, 640] for YOLOv8.
  split_layer: <split_layer>     # OPTIONAL: Layer index where model will be split. -1 by default to run all layers and find the best split. Note: Must be less than total_layers.
  save_layers: <save_layers>     # Layer indices to save intermediate outputs. Useful for debugging and visualization.
  num_classes: <num_classes>     # Number of output classes. null: Use model's default. Example: 1000 for ImageNet, 2 for binary classification.
  mode: <mode>                   # Model operation mode. Options: 'eval' (recommended for split inference), 'train'.
  depth: <depth>                         # Depth for recursive model layer exploration. Default is 2.
  flush_buffer_size: <flush_buffer_size> # Number of inferences before results storage. Default is 100.
  warmup_iterations: <warmup_iterations> # Iterations to stabilize performance metrics. Default is 10.
  log_file: <log_file>                   # Separate log file for model operations. Rename to match your model (e.g., alexnetsplit.log).

# DATASET CONFIGURATIONS
# ---------------------
dataset:
  module: <module>              # REQUIRED: Python module name for dataset. Examples: 'imagenet', 'onion'. Defined in src/experiment_design/datasets/
  class: <class>                # REQUIRED: Dataset class name. Examples: 'ImageNetDataset', 'OnionDataset'.
  args:
    root: <root>                # REQUIRED: Dataset root directory. Example: 'data/imagenet', 'data/onion'.
    class_names: <class_names>  # Class names or path to class names file. Examples: 'data/imagenet/imagenet_classes.txt', ["with_weeds", "without_weeds"].
    img_directory: <img_directory>     # Directory containing images. Example: 'data/imagenet/sample_images'.
    transform: <transform>             # Custom transformations. null: Use default transforms for the model.
    max_samples: <max_samples>         # Maximum number of samples to process. -1: Process all available samples.

# DATALOADER CONFIGURATIONS
# ------------------------
dataloader:
  batch_size: <batch_size>          # Number of samples per batch. Recommended: 1 for split inference.
  shuffle: <shuffle>                # Whether to shuffle the dataset. Recommended: false for consistent results.
  num_workers: <num_workers>        # Number of parallel data loading workers. Adjust based on CPU cores available.
  collate_fn: <collate_fn>          # Collate function name. Options: "imagenet_collate", "onion_collate", null

# COMPRESSION CONFIGURATIONS
# ------------------------
compression:
  clevel: <compression_level>  # Compression level [0 - 9] with 9 being maximum compression as default from blosc2.
  filter: <compression_filter> # Compression filter. Options: SHUFFLE, BITSHUFFLE, DELTA, ZSTD.
  codec: <compression_codec>   # Compression codec. Options: ZSTD, BLOSCLZ, LZ4, etc.
