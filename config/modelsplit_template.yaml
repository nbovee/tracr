# ================================================================
# MODEL SPLIT CONFIGURATION TEMPLATE
# ================================================================
# This template defines the configuration for split inference experiments.
#
# QUICK START:
# 1. Copy this file to a new file (e.g., alexnetsplit.yaml)
# 2. Update the required fields (marked with [REQUIRED])
# 3. Run the experiment with: python host.py --config config/your_config.yaml
# ================================================================

# ================================================================
# DEFAULT CONFIGURATIONS
# ================================================================
default:
  device: "cuda"                      # [OPTIONAL] Computing device: 'cuda' (GPU) or 'cpu'. Default: 'cuda' if available, else 'cpu'
  save_layer_images: false            # [OPTIONAL] Save intermediate layer images. Default: false
  collect_metrics: false              # [OPTIONAL] Collect detailed metrics per layer (time-consuming for cpu systems). Default: false

# ================================================================
# LOGGING CONFIGURATIONS
# ================================================================
logging:
  log_level: "INFO"                   # [OPTIONAL] Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL. Default: INFO
  log_file: "logs/app.log"            # [OPTIONAL] Central log file. Default: logs/app.log

# ================================================================
# MODEL CONFIGURATIONS
# ================================================================
model:
  # Basic Model Settings
  model_name: "resnet50"              # [REQUIRED] Model architecture name (e.g., 'alexnet', 'resnet50', 'yolov8s')
  pretrained: true                    # [OPTIONAL] Use pretrained weights. Default: false
  weight_path: null                   # [OPTIONAL] Custom weights file path. Default: null (use pretrained if available)
  
  # Input/Output Settings
  input_size: [3, 224, 224]           # [REQUIRED] Input dimensions [channels, height, width]
  num_classes: null                   # [OPTIONAL] Number of output classes. Default: model's default (e.g., 1000 for ImageNet)
  
  # Split Settings
  split_layer: 5                      # [RECOMMENDED] Layer index for model splitting. Default: -1 (auto-determine)
  save_layers: null                   # [OPTIONAL] Layer indices to save outputs. Default: null
  
  # Advanced Settings
  version: null                       # [OPTIONAL] Model version. Default: null
  mode: "eval"                        # [OPTIONAL] Model mode: 'eval' or 'train'. Default: 'eval'
  depth: 2                            # [OPTIONAL] Depth for layer exploration. Default: 2
  flush_buffer_size: 100              # [OPTIONAL] Buffer size for result storage. Default: 100
  warmup_iterations: 10               # [OPTIONAL] Iterations before metrics collection. Default: 10
  log_file: "logs/model.log"          # [OPTIONAL] Model-specific log file. Default: logs/{model_name}.log

# ================================================================
# DATASET CONFIGURATIONS
# ================================================================
dataset:
  name: "imagenet"                    # [REQUIRED] Dataset name (e.g., 'imagenet', 'onion', 'custom')
  root: "data/imagenet"               # [REQUIRED] Dataset root directory
  class_names: "data/imagenet/imagenet_classes.txt"  # [OPTIONAL] Class names file or list. Default: module-specific
  img_directory: "data/imagenet/sample_images"  # [OPTIONAL] Image directory. Default: {root}/images
  transform: null                     # [OPTIONAL] Custom transformations. Default: model-appropriate transforms
  max_samples: -1                     # [OPTIONAL] Maximum samples to process. Default: -1 (all samples)

# ================================================================
# DATALOADER CONFIGURATIONS
# ================================================================
dataloader:
  batch_size: 1                       # [OPTIONAL] Batch size. Default: 1 (recommended for split inference)
  shuffle: false                      # [OPTIONAL] Shuffle dataset. Default: false
  num_workers: 2                      # [OPTIONAL] Data loading workers. Default: 2
  collate_fn: null                    # [OPTIONAL] Collate function name. Default: null (standard collation)

# ================================================================
# COMPRESSION CONFIGURATIONS
# ================================================================
compression:
  clevel: 5                           # [OPTIONAL] Compression level [0-9]. Default: 5
  filter: "SHUFFLE"                   # [OPTIONAL] Filter: SHUFFLE, BITSHUFFLE, DELTA, ZSTD. Default: SHUFFLE
  codec: "ZSTD"                       # [OPTIONAL] Codec: ZSTD, BLOSCLZ, LZ4. Default: ZSTD

# ================================================================
# EXAMPLES
# ================================================================

# EXAMPLE 1: AlexNet with ImageNet
# -------------------------------
# model:
#   model_name: "alexnet"
#   pretrained: true
#   input_size: [3, 224, 224]
#   split_layer: 5
#
# dataset:
#   name: "imagenet"
#   root: "data/imagenet"
#   class_names: "data/imagenet/imagenet_classes.txt"
#   img_directory: "data/imagenet/sample_images"

# EXAMPLE 2: YOLOv8 Object Detection
# ---------------------------------
# model:
#   model_name: "yolov8s"
#   pretrained: true
#   input_size: [3, 640, 640]
#   split_layer: 8
#
# dataset:
#   name: "coco"
#   root: "data/coco"
#   img_directory: "data/coco/images"

# EXAMPLE 3: Custom Model with Custom Dataset
# -----------------------------------------
# model:
#   model_name: "custom_model"
#   pretrained: false
#   weight_path: "data/weights/custom_weights.pt"
#   input_size: [3, 256, 256]
#   num_classes: 10
#   split_layer: 3
#
# dataset:
#   name: "custom"
#   root: "data/custom_dataset"
#   max_samples: 100

# ================================================================
# COMMON CONFIGURATIONS BY MODEL TYPE
# ================================================================

# Classification Models
# -------------------
# AlexNet:    input_size=[3, 224, 224], typical split_layer=5
# ResNet50:   input_size=[3, 224, 224], typical split_layer=4
# VGG16:      input_size=[3, 224, 224], typical split_layer=7
# MobileNet:  input_size=[3, 224, 224], typical split_layer=5
# EfficientNet: input_size=[3, 224, 224], typical split_layer=6

# Object Detection Models
# ---------------------
# YOLOv8:     input_size=[3, 640, 640], typical split_layer=8
# YOLOv5:     input_size=[3, 640, 640], typical split_layer=7
# FasterRCNN: input_size=[3, 800, 800], typical split_layer=5

# ================================================================
# VALIDATION AND TROUBLESHOOTING
# ================================================================

# Common Errors
# ------------
# 1. "Model not found" error:
#    - Check model_name spelling
#    - Verify required packages are installed (e.g., ultralytics for YOLO)
#
# 2. "Split layer out of range" error:
#    - Ensure split_layer is less than total model layers
#    - Try running with split_layer=-1 to see available layers
#
# 3. "Dataset not found" error:
#    - Verify dataset module exists in src/experiment_design/datasets/
#    - Check dataset root directory exists and has correct permissions
#
# 4. "CUDA out of memory" error:
#    - Reduce batch_size to 1
#    - Try a different split_layer (earlier layers require less GPU memory)
#    - Reduce input_size dimensions

# Validation Checklist
# ------------------
# ✓ Required fields are set
# ✓ Dataset paths are correct and accessible
# ✓ Model name is valid 
# ✓ Split layer is within valid range for model
# ✓ Compression settings are appropriate for network conditions
